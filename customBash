#!/bin/bash
#shyno
#customBash
#version: 2.2.1

number='^[0-9]+$';
chmod -R a+rx *;


banner()
{
clear;
sleep 0.1;
echo -e '\e[1;36m                _                  ____            _\e[0m';
echo -e '\e[1;36m  ___ _   _ ___| |_ ___  _ __ ___ | __ )  __ _ ___| |__\e[0m';
echo -e '\e[1;35m / __| | | / __| __/ _ \| "_ " _ \|  _ \ / _" / __|  _ \\\e[0m';
echo -e '\e[1;35m| (__| |_| \__ \ || (_) | | | | | | |_) | (_| \__ \ | | |\e[0m';
echo -e '\e[1;36m \___|\__,_|___/\__\___/|_| |_| |_|____/ \__,_|___/_| |_|\e[0m';
echo "";
echo -e "\e[1;31mversion: 2.2.1\e[0m";
echo "";
}


error()
{
clear; echo -e "\e[1;31mERROR: write the correct sign..\e[0m"; sleep 0.6;
}


input()
{
echo "";
echo -en "\e[1;35m (\e[0m""\e[1;31mo\e[0m""\e[1;35m_\e[0m""\e[1;31mO\e[0m";
echo -en "\e[1;35m)\e[0m" "\e[1;31m> \e[0m";
}


inputYN()
{
echo "";
echo -en "\e[1;35m (\e[0m""\e[1;31mo\e[0m""\e[1;35m_\e[0m""\e[1;31mO\e[0m";
echo -en "\e[1;35m) \e[0m";
echo -en "\e[1;35m[\e[0m""\e[1;31my\e[0m""\e[1;35m/\e[0m""\e[1;31mn\e[0m";
echo -en "\e[1;35m]\e[0m" "\e[1;31m> \e[0m";
}


backOrExit()
{
echo -e "\e[1;30mTo back: \"b\" | To exit: \"x\"\e[0m";
echo "";
}


anyKey()
{
echo "";
echo -en "\e[1;30mpress any key: \e[0m";
 read choice
    case $choice in
"") $1; ;;
*) $1; ;;
    esac;
}

color()
{
echo "";
echo -e "\e[1;35m/ \e[0m""\e[1;36m1\e[0m""\e[1;35m / \e[0m""\e[1;37mwhite\e[0m";
echo -e "\e[1;35m/ \e[0m""\e[1;36m2\e[0m""\e[1;35m / \e[0m""\e[1;30mgrey\e[0m";
echo -e "\e[1;35m/ \e[0m""\e[1;36m3\e[0m""\e[1;35m / \e[0m""\e[1;36mcyan\e[0m";
echo -e "\e[1;35m/ \e[0m""\e[1;36m4\e[0m""\e[1;35m / \e[0m""\e[1;35mpurple\e[0m";
echo -e "\e[1;35m/ \e[0m""\e[1;36m5\e[0m""\e[1;35m / \e[0m""\e[1;31mred\e[0m";
echo -e "\e[1;35m/ \e[0m""\e[1;36m6\e[0m""\e[1;35m / \e[0m""\e[1;33myellow\e[0m";
echo -e "\e[1;35m/ \e[0m""\e[1;36m7\e[0m""\e[1;35m / \e[0m""\e[1;32mgreen\e[0m";
echo -e "\e[1;35m/ \e[0m""\e[1;36m8\e[0m""\e[1;35m / \e[0m""\e[1;34mblue\e[0m";
}


colorHandling()
{
    case $colorBlock in
1) colorBlock="$block"; ;;
2) colorBlock="\\\e[1;30m$block\\\e[0m"; ;;
3) colorBlock="\\\e[1;36m$block\\\e[0m"; ;;
4) colorBlock="\\\e[1;35m$block\\\e[0m"; ;;
5) colorBlock="\\\e[1;31m$block\\\e[0m"; ;;
6) colorBlock="\\\e[1;33m$block\\\e[0m"; ;;
7) colorBlock="\\\e[1;32m$block\\\e[0m"; ;;
8) colorBlock="\\\e[1;34m$block\\\e[0m"; ;;
*) colorBlock=""; ;;
    esac;
}


theEnd()
{
banner;
echo -e "\e[1;36mComplete\e[0m";
echo "";
echo -e "\e[1;35mOpen new shell to see changes :3\e[0m";
anyKey shyno;
}


backupModule()
{
#backup motd
  if [[ -f data/backup/motd/motd ]]; then
echo;
  else
cp $PREFIX/etc/motd data/backup/motd/;
  fi;
#backup bash.bashrc
  if [[ -f data/backup/bash.bashrc/bash.bashrc ]]; then
echo;
  else
cp $PREFIX/etc/bash.bashrc data/backup/bash.bashrc/;
  fi;
}


installing()
{
#backup
backupModule;

#config
colorBlock=$timeColor; block="\\\@"; colorHandling; timeColor=$colorBlock;
colorBlock=$userColor; block="\\\u"; colorHandling; userColor=$colorBlock;
colorBlock=$customAdditionColor; block="\\$customAdditionText";
colorHandling; customAdditionColor=$colorBlock;

#installing custom bash
if [[ $timeValue == "n" && $userValue == "n" && $customAdditionValue == "n" ]]; then
  echo;
else
  if [[ $timeValue == "n" ]]; then
    if [[ $userValue == "n" ]]; then
sed -i "s/.*PS1.*/PS1=\'$customAdditionColor\\\w\\\\$ \'/" /data/data/com.termux/files/usr/etc/bash.bashrc;
    else
sed -i "s/.*PS1.*/PS1=\'$userColor $customAdditionColor\\\w\\\\$ \'/" /data/data/com.termux/files/usr/etc/bash.bashrc;
    fi;
  else
sed -i "s/.*PS1.*/PS1=\'$timeColor $userColor $customAdditionColor\\\w\\\\$ \'/" /data/data/com.termux/files/usr/etc/bash.bashrc;
  fi;
fi;

#installing custom motd
  case $motdValue in
"y") echo "" > /data/data/com.termux/files/usr/etc/motd;
echo "$motdText" >> /data/data/com.termux/files/usr/etc/motd;
echo "" >> /data/data/com.termux/files/usr/etc/motd;
echo "" >> /data/data/com.termux/files/usr/etc/motd;
theEnd; ;;
*) theEnd; ;;
  esac;
}


continueOrReturn()
{
banner;
backOrExit;
echo -e "\e[1;36mContinue or return?\e[0m";
echo "";
echo -e "\e[1;35m/ \e[0m""\e[1;36m1\e[0m""\e[1;35m / \e[0m""\e[1;36mcontinue\e[0m";
echo -e "\e[1;35m/ \e[0m""\e[1;36m2\e[0m""\e[1;35m / \e[0m""\e[1;36mreturn\e[0m";
input;
 read choice
    case $choice in
1) installing; ;;
2) timeDisplay; ;;
"b") motdDisplay; ;;
"x") echo ""; exit 0; ;;
*) error; continueOrReturn; ;;
  esac;
}


checkBlocksExist()
{
if [[ $timeValue == "n" && $userValue == "n" && $customAdditionValue == "n" && $motdValue == "n" ]]; then
banner;
echo -e "\e[1;36mYou set nothing..";
anyKey shyno;
else
continueOrReturn;
fi;

}


motdText()
{
banner;
backOrExit;
echo -e "\e[1;36mEnter the text for custom motd\e[0m";
input;
 read motdText
    case $motdText in
"b") motdDisplay; ;;
"x") echo ""; exit 0; ;;
"") error; motdText; ;;
*) continueOrReturn; ;;
  esac;
}


motdDisplay()
{
banner;
backOrExit;
echo -e "\e[1;36mDo install the custom motd?\e[0m";
inputYN;
 read motdValue
    case $motdValue in
"y") motdText; ;;
"n") checkBlocksExist; ;;
"b") customAdditionDisplay; ;;
"x") echo ""; exit 0; ;;
*) error; motdDisplay; ;;
    esac;
}


customAdditionColor()
{
banner;
backOrExit;
echo -e "\e[1;36mWhat color will be installed for custom addition?\e[0m";
color;
input;
 read customAdditionColor
    case $customAdditionColor in
1) motdDisplay; ;;
2) motdDisplay; ;;
3) motdDisplay; ;;
4) motdDisplay; ;;
5) motdDisplay; ;;
6) motdDisplay; ;;
7) motdDisplay; ;;
8) motdDisplay; ;;
"b") customAdditionText; ;;
"x") echo ""; exit 0; ;;
*) error; customAdditionColor; ;;
    esac;
}


userColor()
{
banner;
backOrExit;
echo -e "\e[1;36mWhat color will be installed for user?\e[0m";
color;
input;
 read userColor
    case $userColor in
1) customAdditionDisplay; ;;
2) customAdditionDisplay; ;;
3) customAdditionDisplay; ;;
4) customAdditionDisplay; ;;
5) customAdditionDisplay; ;;
6) customAdditionDisplay; ;;
7) customAdditionDisplay; ;;
8) customAdditionDisplay; ;;
"b") userDisplay; ;;
"x") echo ""; exit 0; ;;
*) error; userColor; ;;
    esac;
}


timeColor()
{
banner;
backOrExit;
echo -e "\e[1;36mWhat color will be installed for time?\e[0m";
color;
input;
 read timeColor
    case $timeColor in
1) userDisplay; ;;
2) userDisplay; ;;                                                                                   3) userDisplay; ;;
4) userDisplay; ;;
5) userDisplay; ;;
6) userDisplay; ;;
7) userDisplay; ;;
8) userDisplay; ;;
"b") timeDisplay; ;;
"x") echo ""; exit 0; ;;
*) error; timeColor; ;;
    esac;
}


customAdditionText()
{
banner;
backOrExit;
echo -en "\e[1;36mEnter the text for custom addition \e[0m";
echo -e "\e[1;31m(prohibited only numbers)\e[0m";
input;
 read customAdditionText

  if [[ $customAdditionText == "b" ]]; then
customAdditionDisplay;
  elif [[ $customAdditionText == "x" ]]; then
echo ""; exit 0;
  elif [[ $customAdditionText == "" ]]; then
error; customAdditionText;
  elif [[ $customAdditionText =~ $number ]]; then
error; customAdditionText;
  else
customAdditionColor;
  fi;
}


customAdditionDisplay()
{
banner;
backOrExit;
echo -e "\e[1;36mDo install the custom addition?\e[0m";
inputYN;
 read customAdditionValue
  case $customAdditionValue in
"y") customAdditionText; ;;
"n") motdDisplay; ;;
"b") userDisplay; ;;
"x") echo ""; exit 0; ;;
*) error; customAdditionDisplay; ;;
  esac;
}


userDisplay()
{
banner;
backOrExit;
echo -e "\e[1;36mDo install display of the user?\e[0m";
inputYN;
 read userValue
  case $userValue in
"y") userColor; ;;
"n") customAdditionDisplay; ;;
"b") timeDisplay; ;;
"x") echo ""; exit 0; ;;
*) error; userDisplay; ;;
  esac;
}


timeDisplay()
{
banner;
backOrExit;
echo -e "\e[1;36mDo install display of the time?\e[0m";
inputYN;
 read timeValue
  case $timeValue in
"y") timeColor; ;;
"n") userDisplay; ;;
"b") shyno; ;;
"x") echo ""; exit 0; ;;
*) error; timeDisplay; ;;
  esac;
}


returnMotd()
{
banner;
backOrExit;
echo -e "\e[1;36mReturn old motd or make existing one by default?\e[0m";
echo "";
echo -en "\e[1;35m/ \e[0m""\e[1;36m0\e[0m""\e[1;35m / \e[0m"
echo -e "\e[1;36mreturn old motd\e[0m";
echo -en "\e[1;35m/ \e[0m""\e[1;36m1\e[0m""\e[1;35m / \e[0m"
echo -e "\e[1;36mmake existing one by default\e[0m";
input;
 read choice
  case $choice in
0)  if [[ -f data/backup/motd/motd ]]; then
cp data/backup/motd/motd $PREFIX/etc/;
banner;
echo "old motd returned";
anyKey shyno;
    else
banner;
echo "motd backup not exist";
anyKey shyno;
    fi; ;;
1) cp $PREFIX/etc/motd data/backup/motd/;
banner;
echo "existing motd made by default";
anyKey shyno; ;;
"b") shyno; ;;
"x") echo ""; exit 0; ;;
*) error; returnMotd; ;;
  esac;
}


returnBash()
{
banner;
backOrExit;
echo -e "\e[1;36mReturn old bash or make existing one by default?\e[0m";
echo "";
echo -en "\e[1;35m/ \e[0m""\e[1;36m0\e[0m""\e[1;35m / \e[0m"
echo -e "\e[1;36mreturn old bash\e[0m";
echo -en "\e[1;35m/ \e[0m""\e[1;36m1\e[0m""\e[1;35m / \e[0m"
echo -e "\e[1;36mmake existing one by default\e[0m";
input;
 read choice
  case $choice in
0)  if [[ -f data/backup/bash.bashrc/bash.bashrc ]]; then
cp data/backup/bash.bashrc/bash.bashrc $PREFIX/etc/;
banner;
echo "old bash returned";
anyKey shyno;
    else
banner;
echo "bash backup not exist";
anyKey shyno;
    fi; ;;
1) cp $PREFIX/etc/bash.bashrc data/backup/bash.bashrc/;
banner;
echo "existing bash made by default";
anyKey shyno; ;;
"b") shyno; ;;
"x") echo ""; exit 0; ;;
*) error; returnBash; ;;
  esac;
}


patternBash()
{
banner;
echo -e "\e[1;30msoon..\e[0m";
anyKey shyno;
}


aboutProgram()
{
banner;
echo -e "\e[1;30mTo back: 'b' | To exit: 'x'\e[0m";
echo -e "\e[1;30mTo update: 'u'\e[0m";
echo "";
echo -en "\e[1;36m⊹ \e[0m";
echo -e "\e[1;35mProgram:\e[0m" "\e[1;36mcustomBash\e[0m";
echo -en "\e[1;36m⊹ \e[0m";
echo -e "\e[1;35mCreator:\e[0m" "\e[1;36mshyno\e[0m";
echo -en "\e[1;36m⊹ \e[0m";
echo -e "\e[1;35mVk:\e[0m" "\e[1;36mhttps://vk.com/shynolinux\e[0m";
echo "";
input;
  read choice
    case $choice in
"b") shyno; ;;
"u") ./data/update/update.sh; shyno; ;;
"x") echo ""; exit 0; ;;
*) error; aboutProgram; ;;
    esac;
}


shyno()
{
banner;
echo -e "\e[1;30mTo exit: \"x\"\e[0m";
echo "";
echo -e "\e[1;35m/ \e[0m""\e[1;36m1\e[0m""\e[1;35m / \e[0m""\e[1;36mcreate bash\e[0m";
echo -e "\e[1;35m/ \e[0m""\e[1;36m2\e[0m""\e[1;35m / \e[0m""\e[1;36mbash pattern\e[0m";
echo -e "\e[1;35m/ \e[0m""\e[1;36m3\e[0m""\e[1;35m / \e[0m""\e[1;36mreturn bash\e[0m";
echo -e "\e[1;35m/ \e[0m""\e[1;36m4\e[0m""\e[1;35m / \e[0m""\e[1;36mreturn motd\e[0m";
echo -e "\e[1;35m/ \e[0m""\e[1;36m5\e[0m""\e[1;35m / \e[0m""\e[1;36mabout program\e[0m";
input;
 read choice
    case $choice in
1) timeDisplay; ;;
2) patternBash; ;;
3) returnBash; ;;
4) returnMotd; ;;
5) aboutProgram; ;;
"x") echo ""; exit 0; ;;
*) error; shyno; ;;
    esac;
}


checkingSystem()
{
  if [[ -d /data/data/com.termux/files/home ]]; then
shyno;
  else
banner;
echo -e "\e[1;35mIt's not termux :(\e[0m";
anyKey echo ""; exit 0;
  fi;
}
checkingSystem;
